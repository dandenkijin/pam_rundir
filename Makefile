# Include configuration generated by configure
include config.mak

# Project information
PACKAGE := pam_rundir
VERSION := 1.1.0

# Build tools and flags
CC ?= cc
CFLAGS ?= -Wall -Wextra -fPIC
LDFLAGS ?= -shared
POD2MAN ?= pod2man

# Installation directories
PREFIX ?= /usr/local
MANDIR ?= $(PREFIX)/share/man/man8

# Source files
SRC = $(PACKAGE).c
OBJS = $(SRC:.c=.o)
BINS = $(PACKAGE).so
DOCS = $(PACKAGE).8

# Default target
.PHONY: all
all: $(BINS) $(DOCS)

# Build shared library
$(BINS): $(OBJS)
	$(CC) $(LDFLAGS) -o $@ $^ -lpam

# Compile C files with dependencies
%.o: %.c
	$(CC) $(CFLAGS) -c -o $@ $<

# Generate man pages from POD
%.8: %.pod
	@if command -v $(POD2MAN) >/dev/null 2>&1; then \
		echo "  POD2MAN  $@"; \
		$(POD2MAN) --center="$(PACKAGE)" --section=8 --release="$(VERSION)" $< > $@; \
	else \
		echo "  WARNING: $(POD2MAN) not found, cannot generate $@"; \
		touch $@; \
	fi

# Installation
.PHONY: install
install: $(BINS) $(DOCS)
	@echo "Installing to $(DESTDIR)$(SECUREDIR)"
	install -d $(DESTDIR)$(SECUREDIR)
	install -m 755 $(BINS) $(DESTDIR)$(SECUREDIR)/
	if [ -f $(DOCS) ]; then \
		install -d $(DESTDIR)$(MANDIR); \
		install -m 644 $(DOCS) $(DESTDIR)$(MANDIR)/; \
	fi

# Uninstallation
.PHONY: uninstall
uninstall:
	rm -f $(DESTDIR)$(SECUREDIR)/$(BINS)
	rm -f $(DESTDIR)$(MANDIR)/$(DOCS)

# Package creation
.PHONY: dist
dist: distclean
	@if [ -d .git ]; then \
		git archive --format=tar.gz --prefix=$(PACKAGE)-$(VERSION)/ HEAD > $(PACKAGE)-$(VERSION).tar.gz; \
		echo "Created $(PACKAGE)-$(VERSION).tar.gz"; \
	else \
		mkdir -p /tmp/$(PACKAGE)-$(VERSION); \
		tar --exclude='.git*' -c . | tar -x -C /tmp/$(PACKAGE)-$(VERSION); \
		tar -C /tmp -czf $(PACKAGE)-$(VERSION).tar.gz $(PACKAGE)-$(VERSION); \
		rm -rf /tmp/$(PACKAGE)-$(VERSION); \
		echo "Created $(PACKAGE)-$(VERSION).tar.gz"; \
	fi

# Cleanup
.PHONY: clean
clean:
	rm -f $(OBJS) $(BINS) $(DOCS) *.o *.so *.8

.PHONY: distclean
# Note: config.mak and config.h are now preserved by default
# Run 'make distclean' to remove them if needed
distclean: clean
	rm -f config.mak config.h

# Help target
.PHONY: help
help:
	@echo "Available targets:"
	@echo "  all       - Build everything (default)"
	@echo "  install   - Install to $(DESTDIR)$(SECUREDIR)"
	@echo "  uninstall - Remove installed files"
	@echo "  dist      - Create source distribution"
	@echo "  clean     - Remove build artifacts"
	@echo "  distclean - Remove all generated files"
	@echo "  help      - Show this help message"

# Default target
.DEFAULT_GOAL := all

# Enable second expansion for more complex rules
.SECONDEXPANSION:
